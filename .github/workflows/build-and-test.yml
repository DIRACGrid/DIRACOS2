name: Build and test installer
on:
  push:
    # Only build for pushes to branches
    branches:
      - main
    tags-ignore:
      - '**'
  pull_request:
    branches:
      - main
  schedule:
    - cron:  '6 2 * * *'

jobs:
  build-installer:
    name: Build installer
    if: github.repository == 'DIRACGrid/DIRACOS2'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        target_arch: ["linux-64", "linux-aarch64", "linux-ppc64le"]
    steps:
      - uses: actions/checkout@v2
      - id: get-date
        run: echo "::set-output name=year-and-week::$(date +"%Y-W%U")"
        shell: bash
      - name: Keep constructor cache between invocations
        # This is big help to avoid needing to transmuting packages every time
        id: cache-transmuted-packages
        uses: actions/cache@v2
        with:
          path: ~/.conda/constructor
          key: ${{ runner.os }}-constructor-${{ steps.get-date.outputs.year-and-week }}
      - name: Prepare environment
        uses: conda-incubator/setup-miniconda@master
        with:
          environment-file: scripts/environment.yml
          miniforge-variant: Mambaforge
          use-mamba: true
      - name: Create installer
        run: |
          CONDA_SUBDIR=${{ matrix.target_arch }} mamba create --name constructor-${{ matrix.target_arch }} conda-standalone
          CONDA_STANDALONE_PATH="$(conda info --envs | grep constructor-${{ matrix.target_arch }} | sed -E 's@([^ ]+ +)@@g')/standalone_conda/conda.exe"
          constructor . --platform="${{ matrix.target_arch }}" --conda-exe="${CONDA_STANDALONE_PATH}"
      - name: Upload installer
        uses: actions/upload-artifact@v2
        with:
          name: installer
          path: DIRACOS-*.sh

  get-info:
    name: Create environment.yaml
    if: github.repository == 'DIRACGrid/DIRACOS2'
    needs: build-installer
    runs-on: ubuntu-latest
    steps:
      - name: Download installer
        uses: actions/download-artifact@v2
        with:
          name: installer
      - name: Generate environment.yaml
        run: |
          bash DIRACOS-*.sh
          source diracos/diracosrc
          conda env export --file environment.yaml
      - name: Upload environment.yaml
        uses: actions/upload-artifact@v2
        with:
          name: environment-yaml
          path: |
            environment.yaml

  release-notes:
    name: Show release notes and diff
    if: github.repository == 'DIRACGrid/DIRACOS2'
    needs: get-info
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Prepare environment
        uses: conda-incubator/setup-miniconda@master
        with:
          environment-file: scripts/environment.yml
          miniforge-variant: Mambaforge
          use-mamba: true
      - name: Create release notes
        run: |
          scripts/make_release.py \
            --token="${{ secrets.GITHUB_TOKEN }}" \
            --artifacts-dir="${PWD}/artifacts" \
            > release-notes.md
          cat release-notes.md
      - name: Upload release-notes.md
        uses: actions/upload-artifact@v2
        with:
          name: release-notes
          path: |
            release-notes.md

  basic-tests:
    name: Basic tests
    if: github.repository == 'DIRACGrid/DIRACOS2'
    needs: build-installer
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker-image:
          - "centos:6"
          - "centos:7"
          - "centos:8"
    steps:
      - uses: actions/checkout@v2
      - name: Download installer
        uses: actions/download-artifact@v2
        with:
          name: installer
      - name: Run tests
        run: scripts/run_basic_tests.sh ${{ matrix.docker-image }} DIRACOS-*.sh
